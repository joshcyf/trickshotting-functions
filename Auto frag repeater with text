/*
to make it continue after round ends put this in onplayerspawned
if(getDvarInt("autofragrep"))self thread autoFragRepeater();
*/
autofragrep(){
	if (!getDvarInt("autofragrep")){
		setDvar("autofragrep", 1);
		self iPrintln("Auto frag repeater enabled.");
		self thread autoFragRepeater();
	}
	else
	{
		setDvar("autofragrep", 0);
		self iPrintln("Auto frag repeater disabled.");
		self notify("autofragrep0");
	}
}
autoFragRepeater(){

	self endon("disconnect");
	self endon("autofragrep0");
	for(;;){

		self waittill( "grenade_fire", grenade, weaponName );
		if( weaponName == "frag_grenade_mp" ){

			while(1){

				self.grenad = grenade;
				wait 0.01;
				if( distance( grenade.origin, self.origin ) > 145 ){

					self fragRepeater();
					break;
				}
			}
		}
	}
}
fragRepeater(){

	self thread houdini();
	self thread fakeCenterText(&"WEAPON_NO_WEAPON_AMMO_MP");
}

fakeCenterText(text){
	
	if(!isDefined(self.fakeCenterText))
		self thread createFakeCenterText();
		
	wait 0.01;
	self.fakeCenterText setText(text);
	self.fakeCenterText _fadeIn(10);
	wait 0.1;
	self.fakeCenterText _fadeIn(10);
	wait 0.1;
	self.fakeCenterText _fadeIn(10);
	wait 0.1;
	self.fakeCenterText setText("");
}
createFakeCenterText(){

	self.fakeCenterText = createFontString( "default" , 1.5 );
	self.fakeCenterText.x = 362.5;
	self.fakeCenterText.y = 60.4;
	self.fakeCenterText.alignX = "center";
	self.fakeCenterText.alignY = "middle";
	self.fakeCenterText.font = "default";
	self.fakeCenterText.color = (0.85, 0.85, 0.85);
	self.fakeCenterText.alpha = 1;
	self.fakeCenterText.archived = false;
	self.fakeCenterText setText("");
}
//this does a real repeater the same way the bomb repeater works
houdini(weap)
{
	if(!isdefined(weap))
		weap = "killstreak_predator_missile_mp";
	
	if(self hasWeapon(weap))
		weap = "killstreak_sentry_mp";

	cw = self getCurrentWeapon(); 
	self giveWeapon(weap);
	wait 0.1;
	self switchToWeapon(weap);
	waitframe();
	self takeWeapon(weap);
	waitframe();
	self switchToWeapon(cw);
}
