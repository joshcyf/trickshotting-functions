t_autoMantleRepeater(){
	if(!self.pers["automantlerepeater"]){
		self.pers["automantlerepeater"] = true;
		self iPrintln("Auto mantle repeater enabled.");
		self thread autoMantleRepeater();
	}
	else
	{
		
		self.pers["automantlerepeater"] = false;
		self iPrintln("Auto mantle repeater enabled.");
		self notify("automantlerepeater");
	}
}
autoMantleRepeater(){
  if(!isdefined(self.pers["mantlepos"]))self.pers["mantlepos"] = (0,0,0);
	setDvarIfUninitialized("mantleCooldown", 1 );
  self endon("automantlerepeater0");
	self endon("disconnect");
	for(;;){
		if(distance(self.pers["mantlepos"], self.origin) <= 145 && self.canMantle == true){
			self thread hazza();
			self thread mantleCooldown();
		}
		wait 0.000001;
	}
}
saveMantlePos()
{
	self.pers["mantlepos"] = self.origin;
	setDvar("mantlePos", self.origin );
	self iPrintln("Mantle pos saved.");
}
mantleCooldown()
{
	self.canMantle = false;
	wait getDvarFloat("mantleCooldown");
	self.canMantle = true;	
}
hazza(){
    cw = self getcurrentweapon();
    if(self hasweapon("killstreak_predator_missile_mp")){

        houdiniweapon = "killstreak_precision_airstrike_mp";
        self giveweapon(houdiniweapon);
        wait 0.01;
        self switchtoweapon(houdiniweapon);
        wait 0.01;
        self takeweapon(houdiniweapon);
        wait 0.01;
        self switchtoweapon(cw);

        }else{

        houdiniweapon = "killstreak_predator_missile_mp";
        self giveweapon(houdiniweapon);
        wait 0.01;
        self switchtoweapon(houdiniweapon);
        wait 0.01;
        self takeweapon(houdiniweapon);
        wait 0.01;
        self switchtoweapon(cw);
    }
}
